[{
  "topic": "StringBuffer and StringBuilder",
  "subHeading": "",
  "paragraph": [{
    "content": "StringBuffer",
    "type": "bold-para-head"
  }, {
    "content": "Java StringBuffer class is used to create mutable (modifiable) string. The StringBuffer class in java is same as String class except it is mutable i.e. it can be changed.",
    "type": "para"
  }, {
    "content": "Java StringBuffer class is thread-safe i.e. multiple threads cannot access it simultaneously. So it is safe and will result in an order.",
    "type": "bold-para"
  }, {
    "content": "./assets/java/images/image027.jpg",
    "type": "image"
  }, {
    "content": "./assets/java/images/image028.jpg",
    "type": "image"
  }, {
    "content": "StringBuffer sb=new StringBuffer(\"Hello \");  --sb.append(\"Java\");//now original string is changed  --System.out.println(sb);//prints Hello Java  ----StringBuffer sb=new StringBuffer(\"Hello \");  --sb.insert(1,\"Java\");//now original string is changed  --System.out.println(sb);//prints HJavaello  ----StringBuffer sb=new StringBuffer(\"Hello\");  --sb.replace(1,3,\"Java\");  --System.out.println(sb);//prints HJavalo  ----StringBuffer sb=new StringBuffer(\"Hello\");  --sb.delete(1,3);  --System.out.println(sb);//prints Hlo  ----StringBuffer sb=new StringBuffer(\"Hello\");  --sb.reverse();  --System.out.println(sb);//prints olleH  ----System.out.println(sb.capacity());//default 16  --sb.append(\"Hello\");  --System.out.println(sb.capacity());//now 16  --sb.append(\"java is my favourite language\");  --System.out.println(sb.capacity());//now (16*2)+2=34 i.e (oldcapacity*2)+2  ----System.out.println(sb.capacity());//default 16  --sb.append(\"Hello\");  --System.out.println(sb.capacity());//now 16  --sb.append(\"java is my favourite language\");  --System.out.println(sb.capacity());//now (16*2)+2=34 i.e (oldcapacity*2)+2  --sb.ensureCapacity(10);//now no change  --System.out.println(sb.capacity());//now 34  --sb.ensureCapacity(50);//now (34*2)+2  --System.out.println(sb.capacity());//now 70  ",
    "type": "code"
  }, {
    "content": "StringBuilder",
    "type": "bold-para-head"
  }, {
    "content": "./assets/java/images/image029.jpg",
    "type": "image"
  }, {
    "content": "./assets/java/images/image030.jpg",
    "type": "image"
  }, {
    "content": "Differences between StringBuffer and String",
    "type": "bold-para-head"
  }, {
    "content": "./assets/java/images/image031.jpg",
    "type": "image"
  }, {
    "content": "String and StringBuffer HashCode Test",
    "type": "bold-para-head"
  }, {
    "content": "public class InstanceTest{  --    public static void main(String args[]){  --        System.out.println(\"Hashcode test of String:\");  --        String str=\"java\";  --        System.out.println(str.hashCode());  --        str=str+\"tpoint\";  --        System.out.println(str.hashCode());  --        System.out.println(\"Hashcode test of StringBuffer:\");  --        StringBuffer sb=new StringBuffer(\"java\");  --        System.out.println(sb.hashCode());  --        sb.append(\"tpoint\");  --        System.out.println(sb.hashCode());  --    }  --}  --Hashcode test of String:--3254818--229541438--Hashcode test of StringBuffer:--118352462--118352462",
    "type": "code"
  }, {
    "content": "Differences between StringBuffer and StringBuilder",
    "type": "bold-para-head"
  }, {
    "content": "./assets/java/images/image031.jpg",
    "type": "image"
  }, {
    "content": "The equals method of StringBuffer is not overridden from Object, so it is just reference equality, i.e., the same as using ==.",
    "type": "bold-para"
  }, {
    "content": "StringBuilder inherits equals() from java.lang.Object, and as such StringBuilder.equals() returns true only when passed the same object as an argument. It does not compare the contents of two StringBuilder.",
    "type": "bold-para"
  }, {
    "content": "Ideal way to compare to StringBuffer or StringBuilder:",
    "type": "bold-para-head"
  }, {
    "content": "StringBuilder a= new StringBuilder(\"HELLO JAVA\");--StringBuilder b= new StringBuilder(\"HELLO JAVA\");----if (a.toString().equals(b.toString())){--\tSystem.out.println(\"Objects are equal\");--}",
    "type": "code"
  }, {
    "content": "Conversion between types of strings in Java",
    "type": "bold-para-head"
  }, {
    "content": "From String to StringBuffer and StringBuilder:",
    "type": "bold-para"
  }, {
    "content": "// Java program to demonstrate conversion from --// String to StringBuffer and StringBuilder.--public class Test --{--    public static void main(String[] args)--    {--        String str = \"Geeks\";--         --        // conversion from String object to StringBuffer--        StringBuffer sbr = new StringBuffer(str);--        sbr.reverse();--        System.out.println(sbr);--         --        // conversion from String object to StringBuilder--        StringBuilder sbl = new StringBuilder(str);--        sbl.append(\"ForGeeks\");--        System.out.println(sbl);--    }--}",
    "type": "code"
  }, {
    "content": "From StringBuffer and StringBuilder to String:",
    "type": "bold-para"
  }, {
    "content": "// Java program to demonstrate conversion from --// String to StringBuffer and StringBuilder.--public class Test --{--    public static void main(String[] args)--    {--        StringBuffer sbr = new StringBuffer(\"Geeks\");--         StringBuilder sbl = new StringBuilder(\"Geeks\");--        // conversion from StringBuffer object to String--        String str = sbr.toString();--        System.out.println(str);    --        // conversion from StringBuilder object to String--        String str1 = sbl.toString();--        System.out.println(str1);  --     }--}",
    "type": "code"
  }, {
    "content": " From StringBuffer to StringBuilder or vice-versa:",
    "type": "bold-para"
  }, {
    "content": "public class Test --{--    public static void main(String[] args)--    {--        StringBuffer sbr = new StringBuffer(\"Geeks\");--        // conversion from StringBuffer object to StringBuilder--        String str = sbr.toString();--        StringBuilder sbl = new StringBuilder(str);--        System.out.println(sbl);        --    }--}",
    "type": "code"
  }]
}]
