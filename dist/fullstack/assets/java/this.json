[{
  "topic": "'this' Keyword",
  "subHeading": "",
  "paragraph": [{
    "content": "Usage: ",
    "type": "para"
  }, {
    "content": "'this' can be used to refer current class instance variable.",
    "type": "bullet"
  }, {
    "content": "'this' can be used to invoke current class method (implicitly).",
    "type": "bullet"
  }, {
    "content": "'this()' can be used to invoke current class constructor. ",
    "type": "bullet"
  }, {
    "content": "'this' can be passed as an argument in the method call.",
    "type": "bullet"
  }, {
    "content": "'this' can be passed as argument in the constructor call.",
    "type": "bullet"
  }, {
    "content": "'this' can be used to return the current class instance from the method.",
    "type": "bullet"
  }, {
    "content": "Call to this() must be the first statement in constructor.",
    "type": "bold-para"
  }, {
    "content": "Examples:",
    "type": "para"
  }, {
    "content": "//this can be used to refer current class instance variable.--\tStudent(int rollno,String name,float fee){  ----\t\tthis.rollno=rollno;  --\t\tthis.name=name;  --\t\tthis.fee=fee;  --\t}  ",
    "type": "code"
  }, {
    "content": "//this can be used to invoke current class method (implicitly)--\tclass A{  --\t\t\tvoid m(){System.out.println(\"hello m\");}  --\t\t\tvoid n(){  --\t\t\t\tSystem.out.println(\"hello n\");  --\t\t\t\t//m();//same as this.m()  --\t\t\t\tthis.m();  --\t\t\t}  --\t\t}  --\tclass TestThis4{  --\t\t\tpublic static void main(String args[]){  --\t\t\t\tA a=new A();  --\t\t\t\ta.n();  --\t\t\t}}  ",
    "type": "code"
  }, {
    "content": "//this() can be used to invoke current class constructor.----\tclass A{  --\t\tA(){System.out.println(\"hello a\");}  --\t\tA(int x){  --\t\tthis();  --\t\tSystem.out.println(x);  --\t\t}  }  ",
    "type": "code"
  }, {
    "content": "//this can be passed as an argument in the method call.--//used in event handling (or) in a situation where we have to provide reference of a class to another one. It is used to reuse one object in many methods.--class S2{  --  void m(S2 obj){  --  System.out.println(\"method is invoked\");  --  }  --  void p(){  --  m(this);  --  }  --  public static void main(String args[]){  --  S2 s1 = new S2();  --  s1.p();  --  }  --}  ",
    "type": "code"
  }, {
    "content": "//this can be passed as argument in the constructor call.----class B{----\tA a;--\tb(A a){--\t\tthis.a=a;--\t}--\t--\tvoid display(){--\t\tSystem.out.println(a.data);--\t}--}----class A{--\tint data=10;--\tA(){--\t\tB b= new B(this);--\t\tb.display();--\t}--\t--\tpublic static void main(String args[]){--\t\tA a=new A();--\t}--}",
    "type": "code"
  }, {
    "content": "//this can be used to return the current class instance from the method.----class A{  --A getA(){  --return this;  --}  --void msg(){System.out.println(\"Hello java\");}  --}  --class Test1{  --public static void main(String args[]){  --new A().getA().msg();  --}  --}  ",
    "type": "code"
  }, {
    "content": "//reusing constructor using this keyword----Student(int rollno,String name,String course){  --\tthis.rollno=rollno;  --\tthis.name=name;  --\tthis.course=course;  --}  --Student(int rollno,String name,String course,float fee){  --\tthis(rollno,name,course);//reusing constructor  --\tthis.fee=fee;  --}  ",
    "type": "code"
  }]
}]
